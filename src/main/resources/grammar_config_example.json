{
    "Settings" : [
        {
            "name": "TreeBracketsSmall",
            "seed": 420,
            "output-dir": "C:\\Users\\MKhal\\OneDrive\\Desktop\\UNI\\Bachelorarbeit\\DEV\\generator_out",
            "task": "tree-bracketing",
            "word-generation": "single",
            "phrase-count-cap": 1000,
            "search-tree-depth-cap": 10
        },
        {
            "name": "MaskingSmall",
            "seed" : 420,
            "output-dir": "C:\\Users\\MKhal\\OneDrive\\Desktop\\UNI\\Bachelorarbeit\\DEV\\generator_out",
            "task": "masking",
            "word-generation": "single",
            "phrase-count-cap": 1000,
            "search-tree-depth-cap": 10
        }
    ],
    "Grammars": [
        {
            "name" : "Extern CFG",
            "load-from": "C:\\Users\\MKhal\\OneDrive\\Desktop\\UNI\\Bachelorarbeit\\Data\\NLTK_LARGE_GRAMMAR\\large_grammars\\atis.cfg"
        },
        {
            "name" : "ExampleGrammar",
            "non-terminals": ["A", "B", "C", "D"],
            "terminals" : ["a", "b", "c"],
            "mask-worthy" : ["a"],
            "rules" : ["A -> A B| B| B C| a", "B -> b", "C -> A | c"],
            "dictionary" : {
                "a"  :  ["Peter", "Hans", "Gerhard"],
                "b"  :  ["b"],
                "c" :  ["c"]
            },
            "start-phrase": "A C A B A"
        },
        {
            "name" : "SF",
            "non-terminals": ["S"],
            "terminals" : ["P", "A", "SAGT", "DASS"],
            "rules" : [
                "S -> P SAGT DASS S",
                "S -> A"
            ],
            "dictionary" : {
                "DASS" : [",_dass"],
                "SAGT" : ["sagt", "meint", "will"] ,
                "P" : ["Toni", "Marie", "Sunny", "Leo", "Thommy"],
                "A" : ["alles_ok_ist", "es_morgen_schneit"]
            },
            "start-phrase": "S"
        },
        {
            "name" : "NSF",
            "non-terminals": ["T", "S"],
            "terminals" : ["P", "A", "SAGT", "DASS", "UND"],
            "rules" : [
                "T -> S | S UND T",
                "S -> P SAGT DASS S | A"
            ],
            "dictionary" : {
                "UND" : ["und"],
                "DASS" : [",_dass"],
                "SAGT" : ["sagt", "meint", "will"] ,
                "P" : ["Toni", "Marie", "Sunny", "Leo", "Thommy"],
                "A" : ["alles_ok_ist", "es_morgen_schneit"]
            },
            "start-phrase": "T"
        },
        {
            "name" : "1-Dyck",
            "non-terminals": ["S", "T", "P"],
            "terminals" : ["UND", "DEREN", "KOMMA", "D", "N_s", "V_s"],
            "rules" : [
                "S -> S UND S",
                "S -> D N_s V_s",
                "S -> D N_s KOMMA DEREN T KOMMA V_s",
                "T -> N_s V_s",
                "T -> N_s KOMMA P KOMMA V_s",
                "P -> DEREN T",
                "P -> P UND P"
            ],
            "dictionary" : {
                "UND" : ["und"],
                "DEREN" : ["deren"],
                "KOMMA" : [","],
                "N_s" : ["B채rin", "Katja", "Tochter", "Mutter"],
                "V_s" : ["geht", "spielt", "tanzt", "singt", "schwimmt"],
                "D" : ["die", "eine", "diese"]
            },
            "start-phrase": "S"
        },
        {
            "name" : "2-Dyck",
            "non-terminals": ["S", "T", "P"],
            "terminals" : ["UND", "DEREN", "KOMMA", "D", "N_s", "V_s", "N_p", "V_p"],
            "rules" : [
                "S -> S UND S",
                "S -> D N_s V_s | D N_p V_p",
                "S -> D N_s KOMMA DEREN T KOMMA V_s | D N_p KOMMA DEREN T KOMMA V_p",
                "T -> N_s V_s | N_p V_p",
                "T -> N_p KOMMA P KOMMA V_p | N_p KOMMA P KOMMA V_p",
                "P -> DEREN T",
                "P -> P UND P"
            ],
            "dictionary" : {
                "UND" : ["und"],
                "DEREN" : ["deren"],
                "KOMMA" : [","],
                "N_s" : ["B채rin", "Katja", "Tochter", "Mutter"],
                "V_s" : ["geht", "spielt", "tanzt", "singt", "schwimmt"],
                "N_p" : ["B채ren", "Teller", "H체nde", "Flaschen"],
                "V_p" : ["fliegen", "fallen", "liegen", "stehen"],
                "D" : ["die"]
            },
            "start-phrase": "S"
        }
    ],
    "Outputs": [
        {
            "Grammar" : "Extern CFG",
            "Setting" : "MaskingSmall",
            "file-name": "LARGE-MASKING",
            "overwrite-file": true
        },
        {
            "Grammar" : "1-Dyck",
            "Setting" : "TreeBracketsSmall",
            "file-name": "1D-Bracket",
            "overwrite-file": true
        },
        {
            "Grammar" : "1-Dyck",
            "Setting" : "MaskingSmall",
            "file-name": "1D-Mask",
            "overwrite-file": true
        },
        {
            "Grammar" : "2-Dyck",
            "Setting" : "TreeBracketsSmall",
            "file-name": "2D-Bracket",
            "overwrite-file": true
        },
        {
            "Grammar" : "2-Dyck",
            "Setting" : "MaskingSmall",
            "file-name": "2D-Mask",
            "overwrite-file": true
        },
        {
            "Grammar" : "SF",
            "Setting" : "TreeBracketsSmall",
            "file-name": "SF-Bracket",
            "overwrite-file": true
        },
        {
            "Grammar" : "SF",
            "Setting" : "MaskingSmall",
            "file-name": "SF-Mask",
            "overwrite-file": true
        },
        {
            "Grammar" : "NSF",
            "Setting" : "TreeBracketsSmall",
            "file-name": "NSF-Bracket",
            "overwrite-file": true
        },
        {
            "Grammar" : "NSF",
            "Setting" : "MaskingSmall",
            "file-name": "NSF-Mask",
            "overwrite-file": true
        }
    ]
}

